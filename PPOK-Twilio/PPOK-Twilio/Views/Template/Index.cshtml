@{
    ViewBag.Title = "Message Templates";
}

@section additionalCSS{
    <link href="~/Content/DataTables/datatables.min.css" rel="stylesheet" />
}

<h1>@ViewBag.Title</h1>

<div>

    <div class="datatablesCustomBack">
        @{Html.RenderAction("TemplateTable", "Template");}

        <div class="modal" id="templateModal" tabindex="-1" role="dialog" aria-labelledby="templateModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        @Html.Label("Template: ")
                        <span id="templateModalType"></span>
                        <span id="templateModalMedia"></span>
                    </div>
                    <div class="modal-body">
                        <span>
                            Edit the template here. 
                            Insert a variable using squiggly brackets or the button. 
                            Access properties on a variable using a dot.
                            <br/>
                            <b>Example: {Patient.FirstName}</b>
                        </span>
                        <br/>
                        <button onclick="insertBrackets()" style="margin-bottom: 10px">Insert Variable</button>
                        <div id="templateModalEditor" style="width: 500px; height: 200px"></div>
                    </div>
                    <div class="modal-footer">
                        <div id="templateModalError" class="hidden alert alert-danger"></div>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button id="templateModalSave" type="button" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/ace.js"></script>
    <script src="~/Content/DataTables/datatables.min.js?Build=@Guid.NewGuid().ToString()"></script>
    <script src="~/Scripts/ace/ace.js"></script>
    <script src="~/Scripts/ace/ext-language_tools.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var editor = ace.edit("templateModalEditor");
            editor.setTheme("ace/theme/tomorrow");
            editor.getSession().setMode("ace/mode/template");
            editor.$blockScrolling = Infinity;

            editor.setOptions({
                enableBasicAutocompletion: true
            });

            window.insertBrackets = function () {
                editor.insert('{}');
                editor.navigateLeft(1);
                editor.focus();
            };

            editor.getSession().on('change', function (event) {
                if (event.action === 'insert' && event.lines.length === 1 && event.lines[0] === '{') {
                    editor.navigateRight(1);
                    editor.insert('}');
                    editor.navigateLeft(2);
                }
            })

            editor.getSelection().on('changeCursor', function () {
                var pos = editor.getCursorPosition();
                var token = editor.session.getTokenAt(pos.row, pos.column);
                if (token) {
                    token = token.type;
                    if (token != 'text' && token != 'keyword') {
                        ace.require('ace/autocomplete').Autocomplete.startCommand.exec(editor);
                    }
                }
            });

            var modal = $('#templateModal');
            var typeDiv = modal.find('#templateModalType');
            var mediaDiv = modal.find('#templateModalMedia');
            var errorDiv = modal.find('#templateModalError');
            modal
                .on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);
                    var type = button.data('type');
                    var media = button.data('media');

                    typeDiv.text(type);
                    mediaDiv.text(media);
                    editor.setValue('Loading...');
                    $.ajax({
                        url: '/Template/GetContent',
                        data: { type, media },
                        type: 'GET',
                        cache: false,
                        success: function (content) {
                            editor.setValue(content);
                        },
                        error: function () {
                            errorDiv.removeClass('hidden');
                            errorDiv.text('Failed to load template!');
                        }
                    });
                })
                .on('click', '#templateModalSave', function (event) {
                    var type = typeDiv.text();
                    var media = mediaDiv.text();
                    var content = editor.getValue();
                    $.ajax({
                        url: 'Template/SaveTemplate',
                        data: { type, media, content },
                        type: 'POST',
                        cache: false,
                        success: function () {
                            modal.modal('hide');
                        },
                        error: function () {
                            errorDiv.removeClass('hidden');
                            errorDiv.text('Failed to save template!');
                        }
                    })
                });
        })
    </script>
}